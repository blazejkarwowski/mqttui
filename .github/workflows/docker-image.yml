# .github/workflows/docker-publish.yml
name: Docker Build and Push to GHCR

# Controls when the workflow will run
on:
  # push:
  #  branches: [ "main" ] # Trigger on push to the main branch
  # Optionally, trigger on new tags/releases:
  # release:
  #   types: [ published ]
  # Optionally, allow manual trigger:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Use a Linux runner

    permissions: # Grant necessary permissions
      contents: read      # To checkout the code
      packages: write     # To push Docker image to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository's code

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKEN is automatically created by Actions, has necessary permissions
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Assign an ID to refer to the outputs later
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # ghcr.io/user/repo format
          # Define tagging strategy:
          tags: |
            type=sha # Add tag like ghcr.io/user/repo:sha-abcdef0
            type=raw,value=latest,enable={{is_default_branch}} # Add 'latest' tag only for the default branch (main)
            # Add more tags if needed, e.g., based on Git tags for releases:
            # type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Optional but recommended

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          file: ./Dockerfile # Path to your Dockerfile
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata-action
          cache-from: type=gha # Enable GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max
